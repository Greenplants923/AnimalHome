//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyWeiboProject202005061120.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    public partial class Posts
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Posts()
        {
            this.LikesNumber = 0;
            this.CommentsNumber = 0;
            this.Score = 0D;
            this.Likes = new HashSet<Likes>();
            this.Comments = new HashSet<Comments>();
        }
    
        public int Id { get; set; }
        [DisplayName("动态内容")]
        [Required]
        public string Body { get; set; }
        public string Photo { get; set; }
        [DisplayName("发布时间")]
        public System.DateTime TimeStamp { get; set; }
        [DisplayName("点赞数")]
        public long LikesNumber { get; set; }
        [DisplayName("评论数")]
        public long CommentsNumber { get; set; }
        public double Score { get; set; }
        public int UsersId { get; set; }
    
        public virtual Users Users { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Likes> Likes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Comments> Comments { get; set; }
        public bool IsLiked(string userid, int postid)
        {
            Boolean isliked = false;
            myWeiboDB202005061120Entities db = new myWeiboDB202005061120Entities();
            Users userI = db.UsersSet.Where(ui => ui.UserId == userid).FirstOrDefault();
            Likes like = db.LikesSet.Where(l => l.UsersId == userI.Id && l.PostsId == postid).FirstOrDefault();
            if (like != null)
            {
                isliked = true;
            }
            return isliked;
        }
    }
}
